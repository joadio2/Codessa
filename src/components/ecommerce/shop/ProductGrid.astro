---
const { category = 'all', sortBy = 'featured' } = Astro.props;

function routeToProduct(id: number) {
  return `/e-commerce/shop/product/${id}`;
}
import { productsList } from '../../../data/product';




let list = productsList;
if (category !== 'all') {
  list = list.filter(p => p.category === category);
}
if (sortBy === 'featured') {
  list = [...list].sort((a, b) => Number(b.bestseller) - Number(a.bestseller));
} else if (sortBy === 'priceAsc') {
  list = [...list].sort((a, b) => a.price - b.price);
} else if (sortBy === 'priceDesc') {
  list = [...list].sort((a, b) => b.price - a.price);
}
---

<div class="products-grid grid-view" id="products-grid" role="list">
  {list.map((product) => (
    <div class="product-card" data-category={product.category}  role="listitem">
      {product.bestseller && (
        <div class="bestseller-badge" aria-label="Más vendido">
          <svg width="14" height="14" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
          Más vendido
        </div>
      )}

      <div class="product-image">
        <a href={routeToProduct(product.id)} class="image-link" aria-label={`Ver ${product.name}`}>
          <img src={product.image} alt={product.name} loading="lazy" />
        </a>

        <div class="product-overlay">
          <a class="quick-view-btn" href={routeToProduct(product.id)}>
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
              <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
              <circle cx="12" cy="12" r="3"/>
            </svg>
            Vista rápida
          </a>
          <a class="add-to-cart-btn" href={routeToProduct(product.id)}>
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
              <path d="M9 22C9.55228 22 10 21.5523 10 21C10 20.4477 9.55228 20 9 20C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22Z"/>
              <path d="M20 22C20.5523 22 21 21.5523 21 21C21 20.4477 20.5523 20 20 20C19.4477 20 19 20.4477 19 21C19 21.5523 19.4477 22 20 22Z"/>
              <path d="M1 1H5L7.68 14.39C7.77144 14.8504 8.02191 15.264 8.38755 15.5583C8.75318 15.8526 9.2107 16.009 9.68 16H19.4C19.8693 16.009 20.3268 15.8526 20.6925 15.5583C21.0581 15.264 21.3086 14.8504 21.4 14.39L23 6H6"/>
            </svg>
            Agregar al carrito
          </a>
        </div>

        <a class="wishlist-btn" href={routeToProduct(product.id)} title="Agregar a favoritos" aria-label="Agregar a favoritos">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
          </svg>
        </a>
      </div>

      <div class="product-info">
        <div class="product-category">{product.category}</div>
        <h3 class="product-name">
          <a href={routeToProduct(product.id)}>{product.name}</a>
        </h3>
        <p class="product-description">{product.description}</p>

        <div class="product-rating" aria-label={`${product.rating} de 5 con ${product.reviews} reseñas`}>
          <div class="stars">
            {Array.from({ length: 5 }, (_, i) => (
              <svg
                class={`star ${i < Math.floor(product.rating) ? 'filled' : ''}`}
                width="14"
                height="14"
                viewBox="0 0 24 24"
                fill="currentColor"
                aria-hidden="true"
              >
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
            ))}
          </div>
          <span class="rating-text">{product.rating} ({product.reviews} reseñas)</span>
        </div>

        <div class="color-options" role="radiogroup" aria-label="Opciones de color">
          {product.colors.map((color, index) => (
            <button
              class={`color-swatch ${index === 0 ? 'active' : ''}`}
              style={`background-color: ${color}`}
              title="Color disponible"
              data-color={color}
              role="radio"
              aria-checked={index === 0 ? 'true' : 'false'}
              aria-label={`Color ${color}`}
              type="button"
            ></button>
          ))}
        </div>

        <div class="product-price">
          <span class="current-price">${product.price}</span>
          {product.originalPrice && (
            <span class="original-price">${product.originalPrice}</span>
          )}
          {product.originalPrice && (
            <span class="discount-badge">
              -{Math.round(((product.originalPrice - product.price) / product.originalPrice) * 100)}%
            </span>
          )}
        </div>
      </div>
    </div>
  ))}
</div>
<script>
  // Quick view functionality
  document.querySelectorAll('.quick-view-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const productId = btn.dataset.productId;
      // Aquí puedes abrir un modal o navegar a la página del producto
      console.log('Quick view for product:', productId);
    });
  });

  // Add to cart functionality
  document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const productId = btn.dataset.productId;
      
      // Animación de éxito
      btn.style.transform = 'scale(0.95)';
      setTimeout(() => {
        btn.style.transform = 'scale(1)';
      }, 150);
      
      // Aquí puedes agregar la lógica para añadir al carrito
      console.log('Added to cart:', productId);
    });
  });

  // Wishlist functionality
  document.querySelectorAll('.wishlist-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      btn.classList.toggle('active');
      
      const productId = btn.dataset.productId;
      console.log('Toggle wishlist for product:', productId);
    });
  });

  // Color swatch selection
  document.querySelectorAll('.color-swatch').forEach(swatch => {
    swatch.addEventListener('click', (e) => {
      e.stopPropagation();
      
      // Remove active class from siblings
      const siblings = swatch.parentElement.querySelectorAll('.color-swatch');
      siblings.forEach(s => s.classList.remove('active'));
      
      // Add active class to clicked swatch
      swatch.classList.add('active');
    });
  });
  document.addEventListener("click", (e) => {
    const btn = e.target.closest("[data-url]");
    if (btn) {
      const url = btn.getAttribute("data-url");
      if (url) window.location.href = url;
    }
  });
</script>

<style>
  .products-grid {
    display: grid;
    gap: 2rem;
    margin-bottom: 2rem;
  }

  /* Grid View */
  .products-grid.grid-view {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }

  /* List View */
  .products-grid.list-view {
    grid-template-columns: 1fr;
  }

  .products-grid.list-view .product-card {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
  }

  .products-grid.list-view .product-image {
    flex-shrink: 0;
    width: 200px;
    aspect-ratio: 1;
  }

  .products-grid.list-view .product-info {
    flex: 1;
    padding: 0;
  }

  .products-grid.list-view .product-description {
    display: block;
  }

  /* Product Card */
  .product-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    position: relative;
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }

  .bestseller-badge {
    position: absolute;
    top: 1rem;
    left: 1rem;
    background: linear-gradient(135deg, #ff6b9d, #c44569);
    color: white;
    padding: 0.4rem 0.8rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }

  .product-image {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-image img {
    transform: scale(1.05);
  }

  .product-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.8rem;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .product-card:hover .product-overlay {
    opacity: 1;
  }

  .quick-view-btn, .add-to-cart-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.6rem 1.2rem;
    border: none;
    border-radius: 25px;
    font-weight: 500;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .quick-view-btn {
    background: transparent;
    color: white;
    border: 2px solid white;
  }

  .quick-view-btn:hover {
    background: white;
    color: #2c2c2c;
  }

  .add-to-cart-btn {
    background: linear-gradient(135deg, #ff6b9d, #c44569);
    color: white;
    border: 2px solid transparent;
  }

  .add-to-cart-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(255, 107, 157, 0.4);
  }

  .wishlist-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 40px;
    height: 40px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
  }

  .wishlist-btn:hover,
  .wishlist-btn.active {
    background: #c44569;
    color: white;
    transform: scale(1.1);
  }

  .product-info {
    padding: 1.5rem;
  }

  .product-category {
    color: #999;
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 500;
    margin-bottom: 0.5rem;
  }

  .product-name {
    margin: 0 0 0.5rem 0;
    font-size: 1.2rem;
    font-weight: 500;
    line-height: 1.3;
  }

  .product-name a {
    color: #2c2c2c;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .product-name a:hover {
    color: #c44569;
  }

  .product-description {
    display: none;
    color: #666;
    font-size: 0.9rem;
    line-height: 1.5;
    margin-bottom: 1rem;
  }

  .product-rating {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .stars {
    display: flex;
    gap: 0.2rem;
  }

  .star {
    color: #ddd;
    transition: color 0.2s ease;
  }

  .star.filled {
    color: #ffc107;
  }

  .rating-text {
    font-size: 0.85rem;
    color: #666;
  }

  .color-options {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .color-swatch {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    border: 2px solid #eee;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
  }

  .color-swatch:hover,
  .color-swatch.active {
    transform: scale(1.1);
    border-color: #c44569;
  }

  .color-swatch.active::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 10px;
    font-weight: bold;
    text-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
  }

  .product-price {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    flex-wrap: wrap;
  }

  .current-price {
    font-size: 1.3rem;
    font-weight: 600;
    color: #c44569;
  }

  .original-price {
    font-size: 1rem;
    color: #999;
    text-decoration: line-through;
  }

  .discount-badge {
    background: linear-gradient(135deg, #ff6b9d, #c44569);
    color: white;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .products-grid.grid-view {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .products-grid.list-view .product-card {
      flex-direction: column;
      gap: 1rem;
    }

    .products-grid.list-view .product-image {
      width: 100%;
    }

    .product-overlay {
      opacity: 1;
      background: rgba(0, 0, 0, 0.5);
    }

    .quick-view-btn, .add-to-cart-btn {
      padding: 0.5rem 1rem;
      font-size: 0.85rem;
    }
  }

  @media (max-width: 480px) {
    .products-grid.grid-view {
      grid-template-columns: 1fr;
    }

    .product-info {
      padding: 1rem;
    }

    .color-swatch {
      width: 20px;
      height: 20px;
    }
  }
</style>