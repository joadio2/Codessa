---
// ProductSort.astro - Componente de ordenamiento de productos
---

<div class="product-sort">
  <div class="sort-options">
    <label class="sort-label">Ordenar por:</label>
    <div class="sort-dropdown">
      <button class="sort-toggle" id="sort-toggle">
        <span class="sort-text">Destacados</span>
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M6 9l6 6 6-6"/>
        </svg>
      </button>
      
      <div class="sort-menu" id="sort-menu">
        <button class="sort-option active" data-sort="featured">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
          Destacados
        </button>
        <button class="sort-option" data-sort="newest">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
          </svg>
          Más recientes
        </button>
        <button class="sort-option" data-sort="price-low">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M7 13l3 3 7-7M13 2L3 14l4 4L17 8"/>
          </svg>
          Precio: menor a mayor
        </button>
        <button class="sort-option" data-sort="price-high">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M7 13l3 3 7-7M13 2L3 14l4 4L17 8"/>
          </svg>
          Precio: mayor a menor
        </button>
        <button class="sort-option" data-sort="rating">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
          Mejor calificados
        </button>
        <button class="sort-option" data-sort="name">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/>
            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"/>
          </svg>
          Nombre A-Z
        </button>
      </div>
    </div>
  </div>

  <div class="view-options">
    <button class="view-toggle grid-view active" data-view="grid" title="Vista en cuadrícula">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <rect x="3" y="3" width="7" height="7"/>
        <rect x="14" y="3" width="7" height="7"/>
        <rect x="14" y="14" width="7" height="7"/>
        <rect x="3" y="14" width="7" height="7"/>
      </svg>
    </button>
    <button class="view-toggle list-view" data-view="list" title="Vista en lista">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="8" y1="6" x2="21" y2="6"/>
        <line x1="8" y1="12" x2="21" y2="12"/>
        <line x1="8" y1="18" x2="21" y2="18"/>
        <line x1="3" y1="6" x2="3.01" y2="6"/>
        <line x1="3" y1="12" x2="3.01" y2="12"/>
        <line x1="3" y1="18" x2="3.01" y2="18"/>
      </svg>
    </button>
  </div>
</div>

<script>
  // Sort dropdown functionality
  const sortToggle = document.getElementById('sort-toggle');
  const sortMenu = document.getElementById('sort-menu');
  const sortText = document.querySelector('.sort-text');
  const sortOptions = document.querySelectorAll('.sort-option');

  // Toggle sort dropdown
  sortToggle?.addEventListener('click', (e) => {
    e.stopPropagation();
    sortMenu?.classList.toggle('active');
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', () => {
    sortMenu?.classList.remove('active');
  });

  // Handle sort option selection
  sortOptions.forEach(option => {
    option.addEventListener('click', (e) => {
      e.stopPropagation();
      
      // Remove active class from all options
      sortOptions.forEach(opt => opt.classList.remove('active'));
      
      // Add active class to selected option
      option.classList.add('active');
      
      // Update sort text
      if (sortText) {
        sortText.textContent = option.textContent.trim();
      }
      
      // Close dropdown
      sortMenu?.classList.remove('active');
      
      // Trigger sort event
      const sortValue = option.dataset.sort;
      document.dispatchEvent(new CustomEvent('sortChange', { 
        detail: { sortBy: sortValue } 
      }));
    });
  });

  // View toggle functionality
  const viewToggles = document.querySelectorAll('.view-toggle');
  
  viewToggles.forEach(toggle => {
    toggle.addEventListener('click', () => {
      // Remove active class from all toggles
      viewToggles.forEach(t => t.classList.remove('active'));
      
      // Add active class to clicked toggle
      toggle.classList.add('active');
      
      // Get view type
      const viewType = toggle.dataset.view;
      
      // Trigger view change event
      document.dispatchEvent(new CustomEvent('viewChange', { 
        detail: { viewType } 
      }));
      
      // Apply view to product grid
      const productGrid = document.querySelector('.products-grid');
      if (productGrid) {
        productGrid.className = `products-grid ${viewType}-view`;
      }
    });
  });
</script>

<style>
  .product-sort {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
  }

  .sort-options {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .sort-label {
    color: #666;
    font-weight: 500;
    font-size: 0.9rem;
  }

  .sort-dropdown {
    position: relative;
  }

  .sort-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: white;
    border: 2px solid #e0e0e0;
    border-radius: 25px;
    color: #2c2c2c;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    min-width: 160px;
    justify-content: space-between;
  }

  .sort-toggle:hover {
    border-color: #c44569;
  }

  .sort-toggle svg {
    transition: transform 0.3s ease;
  }

  .sort-menu.active + .sort-toggle svg,
  .sort-dropdown:hover .sort-toggle svg {
    transform: rotate(180deg);
  }

  .sort-menu {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid rgba(255, 107, 157, 0.1);
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    z-index: 100;
    margin-top: 0.5rem;
  }

  .sort-menu.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .sort-option {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    width: 100%;
    padding: 0.75rem 1.5rem;
    background: transparent;
    border: none;
    color: #666;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: left;
  }

  .sort-option:hover {
    background: rgba(255, 107, 157, 0.05);
    color: #c44569;
  }

  .sort-option.active {
    background: linear-gradient(135deg, rgba(255, 107, 157, 0.1), rgba(196, 69, 105, 0.1));
    color: #c44569;
  }

  .sort-option:first-child {
    border-radius: 15px 15px 0 0;
  }

  .sort-option:last-child {
    border-radius: 0 0 15px 15px;
  }

  .view-options {
    display: flex;
    gap: 0.5rem;
    background: #f8f8f8;
    padding: 0.25rem;
    border-radius: 25px;
  }

  .view-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: transparent;
    border: none;
    border-radius: 50%;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .view-toggle:hover {
    color: #c44569;
  }

  .view-toggle.active {
    background: white;
    color: #c44569;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .product-sort {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
    }

    .sort-options {
      justify-content: space-between;
    }

    .sort-toggle {
      min-width: auto;
      flex: 1;
    }

    .view-options {
      align-self: center;
    }
  }

  @media (max-width: 480px) {
    .sort-options {
      flex-direction: column;
      align-items: stretch;
      gap: 0.5rem;
    }

    .sort-label {
      text-align: center;
    }

    .sort-toggle {
      width: 100%;
    }
  }
</style>