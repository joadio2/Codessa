---
import { getLangFromUrl, useTranslations } from "../../../i18n/utilsPromo"
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
let newLink = "";
if (lang === "es") newLink = `/${lang}/proyecto-web`;
if (lang === "pt") newLink = `/${lang}/projeto-web`;
if (lang === "en") newLink = `/${lang}/project-details`;
---
<section id="nos-encargamos">
    <h2>{t("howItWorks.title")}</h2>
    <p class="section-subtitle">
      {t("howItWorks.subtitle")}
    </p>
  
    <div class="comic-strip">
      <div class="comic-panel">
        <div class="panel-illustration">
          <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M25.5 79.5C20.3333 73.3333 18.5 60 25.5 52C32.5 44 46.1 47.6 49.5 40C52.9 32.4 38.5 20.5 49.5 15C60.5 9.5 72.5 23.5 79.5 28.5C86.5 33.5 91.5 31.5 88.5 40C85.5 48.5 72.5 52 71.5 61.5C70.5 71 84 75 79.5 83.5C75 92 61.5 88.5 54.5 83.5C47.5 78.5 30.6667 85.6667 25.5 79.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div class="panel-content">
          <h3>{t("howItWorks.step1.title")}</h3>
          <p>{t("howItWorks.step1.description")}</p>
        </div>
      </div>
  
      <div class="arrow-connector">
        <svg width="48" height="48" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path d="M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z"/></svg>
      </div>
  
      <div class="comic-panel">
        <div class="panel-illustration">
          <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M50 62.5L37.5 87.5L25 62.5L37.5 37.5L50 62.5Z" stroke="currentColor" stroke-width="2"/>
            <path d="M75 37.5L62.5 62.5L50 37.5L62.5 12.5L75 37.5Z" stroke="currentColor" stroke-width="2"/>
            <circle cx="37.5" cy="37.5" r="10" stroke="currentColor" stroke-width="2"/>
            <rect x="65" y="65" width="20" height="20" rx="2" stroke="currentColor" stroke-width="2"/>
          </svg>
        </div>
        <div class="panel-content">
          <h3>{t("howItWorks.step2.title")}</h3>
          <p>{t("howItWorks.step2.description")}</p>
        </div>
      </div>
  
      <div class="arrow-connector">
        <svg width="48" height="48" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path d="M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z"/></svg>
      </div>
  
      <div class="comic-panel">
        <div class="panel-illustration">
          <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect x="15" y="20" width="70" height="60" rx="5" stroke="currentColor" stroke-width="2"/>
            <path d="M15 32H85" stroke="currentColor" stroke-width="2"/>
            <circle cx="22" cy="26" r="2" fill="currentColor"/>
            <circle cx="28" cy="26" r="2" fill="currentColor"/>
            <path d="M40 55L50 65L65 45" stroke="var(--color-accent)" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div class="panel-content">
          <h3>{t("howItWorks.step3.title")}</h3>
          <p>{t("howItWorks.step3.description")}</p>
        </div>
      </div>
    </div>
  
    <div class="cta-container">
      <a href={newLink} class="cta-button">{t("howItWorks.cta")}</a>
    </div>
</section>
  
<style is:inline>
    #nos-encargamos {
  padding: 0 2rem 3rem;
  text-align: center;
}

#nos-encargamos h2 {
  font-size: 2.8rem;
  color: var(--color-accent);
  margin-bottom: 1rem;
}

#nos-encargamos .section-subtitle {
  max-width: 600px;
  margin: 0 auto 5rem;
  font-size: 1.2rem;
  color: var(--color-light-text);
  line-height: 1.6;
}

.comic-strip {
  display: flex;
  align-items: stretch; /* Paneles de igual altura */
  justify-content: center;
  gap: 1.5rem;
  max-width: 1200px;
  margin: 0 auto;
}

.comic-panel {
  flex: 1;
  display: flex;
  flex-direction: column;
  /* Usar background para gradiente */
  background: linear-gradient(145deg, #29374e, #1e293b);
  border: 1px solid var(--color-border);
  border-radius: 16px;
  padding: 2rem;
  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
}

.comic-panel:hover {
  transform: translateY(-12px) scale(1.02);
  border-color: var(--color-accent);
  box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04);
}

.panel-illustration {
  height: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.5rem;
  color: var(--color-light-text);
  transition: color 0.3s ease;
}

.comic-panel:hover .panel-illustration {
  color: var(--color-accent);
}

.panel-content h3 {
  font-size: 1.5rem;
  color: var(--color-accent);
  margin-bottom: 0.75rem;
}

.panel-content p {
  font-size: 1rem;
  color: var(--color-light-text);
  line-height: 1.7;
  flex-grow: 1; /* Asegura que el texto llene el espacio */
}

.arrow-connector {
  display: flex;
  align-items: center;
  justify-content: center;
  color: #cbd5e1;
}

.cta-container {
  margin-top: 5rem;
}

.cta-button {
  background-color: var(--color-accent);
  color: var(--color-dark);
  padding: 1rem 2.5rem;
  border-radius: 50px;
  font-weight: 700;
  font-size: 1.1rem;
  transition: all 0.3s ease;
  text-decoration: none;
  display: inline-block;
}

.cta-button:hover {
  transform: translateY(-4px) scale(1.05);
  box-shadow: 0 10px 20px rgba(0, 198, 255, 0.25);
}

/* Animaci√≥n base (fallback): aplica al cargar */
  h2, h3, svg,p,.panel-content p, .cta-button, .comic-panel,.arrow-connector {
    animation: fadeIn 0.5s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(50px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @supports (animation-timeline: view()) {
    h2, h3,svg,p,.panel-content p, .cta-button ,.comic-panel,.arrow-connector {
      animation-timeline: view();
      animation-range: entry 0% cover 20%;
    }
  }

/* Respeta reduce motion */
@media (prefers-reduced-motion: reduce) {
  h2, h3, svg,p,.panel-content p, .cta-button ,.comic-panel ,.arrow-connector{
    animation: none;
  }
}

/* Responsive */
@media (max-width: 900px) {
  .comic-strip {
    flex-direction: column;
    gap: 2rem;
  }

  .arrow-connector {
    transform: rotate(90deg);
    margin: -1rem 0;
  }
}
</style>