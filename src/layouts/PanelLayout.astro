---
interface Props {
  title: string;
  activePage?: string;
}
import "./panel.css"
const { title, activePage } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Poppins:wght@300;400;500;600;700&display=swap" rel="preload" as="style" onload="this.onload=null;this.rel='stylesheet'" />
    <link rel="stylesheet" href="/src/styles/global.css" />
  </head>
  <body>
    <div class="dashboard-container">
      <aside class="sidebar">
        <div class="sidebar-header">
          <h2>Dashboard</h2>
        </div>
        <nav class="sidebar-nav">
          <a href="/panel" class={`nav-item ${activePage === 'dashboard' ? 'active' : ''}`}>
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
              <path d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"/>
            </svg>
            Dashboard
          </a>
          <a href="/panel/process" class={`nav-item ${activePage === 'procesos' ? 'active' : ''}`}>
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
              <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
            </svg>
            Procesos
          </a>
        </nav>
      </aside>
      
      <main class="main-content">
        <slot />
      </main>
    </div>
  </body>
</html>

<style>
  .dashboard-container {
    display: flex;
    min-height: 100vh;
    background-color: var(--color-dark);
  }

  .sidebar {
    width: 260px;
    background-color: var(--color-primary);
    border-right: 1px solid var(--color-border);
    padding: 2rem 0;
    position: fixed;
    height: 100vh;
    overflow-y: auto;
  }

  .sidebar-header {
    padding: 0 2rem 2rem;
    border-bottom: 1px solid var(--color-border);
    margin-bottom: 2rem;
  }

  .sidebar-header h2 {
    color: var(--color-text);
    font-size: 1.5rem;
    font-weight: 600;
  }

  .sidebar-nav {
    padding: 0 1rem;
  }

  .nav-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.875rem 1rem;
    color: var(--color-text-muted);
    border-radius: var(--border-radius);
    margin-bottom: 0.5rem;
    transition: all 0.2s ease;
    font-weight: 500;
  }

  .nav-item:hover {
    background-color: var(--color-secondary);
    color: var(--color-text);
  }

  .nav-item.active {
    background-color: var(--color-accent);
    color: white;
  }

  .nav-item svg {
    flex-shrink: 0;
  }

  .main-content {
    flex: 1;
    margin-left: 260px;
    padding: 2rem;
    background-color: var(--color-dark);
  }

  @media (max-width: 1024px) {
    .sidebar {
      transform: translateX(-100%);
      transition: transform 0.3s ease;
    }
    
    .main-content {
      margin-left: 0;
    }
  }

  @media (max-width: 768px) {
    .sidebar {
      width: 100%;
    }
    
    .main-content {
      padding: 1rem;
    }
  }
</style>